apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: metadata-inference-pipeline-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.6.6, pipelines.kubeflow.org/pipeline_compilation_time: '2021-08-22T07:11:51.543783',
    pipelines.kubeflow.org/pipeline_spec: '{"inputs": [{"name": "tf_model_gd_id"},
      {"name": "gpu"}, {"name": "batch_size"}, {"name": "score"}, {"name": "bootstrap_servers"},
      {"name": "kafka_topic"}, {"name": "kafka_username"}, {"name": "kafka_password"},
      {"name": "vault_api_address"}, {"name": "vault_access_key"}, {"name": "vault_secret_access_key"}],
      "name": "metadata_inference_pipeline"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.6.6}
spec:
  entrypoint: metadata-inference-pipeline
  templates:
  - name: download-and-extract-op
    container:
      args: []
      command: [python, ./src/download_zip_file.py, --gd_file_id, '{{inputs.parameters.tf_model_gd_id}}',
        --extracted_folder, /tmp/outputs/Extracted_Dataset/data]
      image: pedrohgv/download-and-extract-google-drive-op:latest
    inputs:
      parameters:
      - {name: tf_model_gd_id}
    outputs:
      artifacts:
      - {name: download-and-extract-op-Extracted-Dataset, path: /tmp/outputs/Extracted_Dataset/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.6.6
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Downloads
          and extracts file from google drive.", "implementation": {"container": {"command":
          ["python", "./src/download_zip_file.py", "--gd_file_id", {"inputValue":
          "Google Drive ID"}, "--extracted_folder", {"outputPath": "Extracted Dataset"}],
          "image": "pedrohgv/download-and-extract-google-drive-op:latest"}}, "inputs":
          [{"description": "File ID of file in Google Drive", "name": "Google Drive
          ID", "type": "String"}], "name": "Download and Extract op", "outputs": [{"description":
          "Folder containing images and annotaions in Pascal format", "name": "Extracted
          Dataset", "type": "Directory"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "e38c8ba85f408bbb799291ec94fc1cd9efc85232f4c86c4a904ac542c45cd368", "url":
          "./download_and_extract_google_drive_op.yaml"}', pipelines.kubeflow.org/arguments.parameters: '{"Google
          Drive ID": "{{inputs.parameters.tf_model_gd_id}}"}'}
  - name: metadata-inference-pipeline
    inputs:
      parameters:
      - {name: batch_size}
      - {name: bootstrap_servers}
      - {name: gpu}
      - {name: kafka_password}
      - {name: kafka_topic}
      - {name: kafka_username}
      - {name: score}
      - {name: tf_model_gd_id}
      - {name: vault_access_key}
      - {name: vault_api_address}
      - {name: vault_secret_access_key}
    dag:
      tasks:
      - name: download-and-extract-op
        template: download-and-extract-op
        arguments:
          parameters:
          - {name: tf_model_gd_id, value: '{{inputs.parameters.tf_model_gd_id}}'}
      - name: predict-video-metadata-op
        template: predict-video-metadata-op
        dependencies: [download-and-extract-op]
        arguments:
          parameters:
          - {name: batch_size, value: '{{inputs.parameters.batch_size}}'}
          - {name: bootstrap_servers, value: '{{inputs.parameters.bootstrap_servers}}'}
          - {name: gpu, value: '{{inputs.parameters.gpu}}'}
          - {name: kafka_password, value: '{{inputs.parameters.kafka_password}}'}
          - {name: kafka_topic, value: '{{inputs.parameters.kafka_topic}}'}
          - {name: kafka_username, value: '{{inputs.parameters.kafka_username}}'}
          - {name: score, value: '{{inputs.parameters.score}}'}
          - {name: vault_access_key, value: '{{inputs.parameters.vault_access_key}}'}
          - {name: vault_api_address, value: '{{inputs.parameters.vault_api_address}}'}
          - {name: vault_secret_access_key, value: '{{inputs.parameters.vault_secret_access_key}}'}
          artifacts:
          - {name: download-and-extract-op-Extracted-Dataset, from: '{{tasks.download-and-extract-op.outputs.artifacts.download-and-extract-op-Extracted-Dataset}}'}
  - name: predict-video-metadata-op
    container:
      args: []
      command: [python3, /src/detect_video.py, --tf_model, /tmp/inputs/Tensorflow_Model/data,
        --gpu, '{{inputs.parameters.gpu}}', --batch_size, '{{inputs.parameters.batch_size}}',
        --score, '{{inputs.parameters.score}}', --bootstrap_servers, '{{inputs.parameters.bootstrap_servers}}',
        --kafka_topic, '{{inputs.parameters.kafka_topic}}', --kafka_username, '{{inputs.parameters.kafka_username}}',
        --kafka_password, '{{inputs.parameters.kafka_password}}', --vault_api_address,
        '{{inputs.parameters.vault_api_address}}', --vault_access_key, '{{inputs.parameters.vault_access_key}}',
        --vault_secret_access_key, '{{inputs.parameters.vault_secret_access_key}}']
      image: pedrohgv/predict-metadata-op:latest
    inputs:
      parameters:
      - {name: batch_size}
      - {name: bootstrap_servers}
      - {name: gpu}
      - {name: kafka_password}
      - {name: kafka_topic}
      - {name: kafka_username}
      - {name: score}
      - {name: vault_access_key}
      - {name: vault_api_address}
      - {name: vault_secret_access_key}
      artifacts:
      - {name: download-and-extract-op-Extracted-Dataset, path: /tmp/inputs/Tensorflow_Model/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.6.6
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Performs
          an object detection task on videos and outputs metadata.", "implementation":
          {"container": {"command": ["python3", "/src/detect_video.py", "--tf_model",
          {"inputPath": "Tensorflow Model"}, "--gpu", {"inputValue": "GPU"}, "--batch_size",
          {"inputValue": "Batch Size"}, "--score", {"inputValue": "Score"}, "--bootstrap_servers",
          {"inputValue": "Bootstrap Servers"}, "--kafka_topic", {"inputValue": "Kafka
          Topic"}, "--kafka_username", {"inputValue": "Kafka Username"}, "--kafka_password",
          {"inputValue": "Kafka Password"}, "--vault_api_address", {"inputValue":
          "Vault API Address"}, "--vault_access_key", {"inputValue": "Vault Access
          Key"}, "--vault_secret_access_key", {"inputValue": "Vault Secret Access
          Key"}], "image": "pedrohgv/predict-metadata-op:latest"}}, "inputs": [{"description":
          "Input path that contains Tensorflow model files and a config folder, which
          contains a obj.names file", "name": "Tensorflow Model", "type": "Directory"},
          {"description": "Integer representing GPU to be used.", "name": "GPU", "type":
          "Integer"}, {"description": "Batch size of frames to be loaded at each pass
          for through the model.", "name": "Batch Size", "type": "Integer"}, {"description":
          "Minimum score to be considered a valid detection.", "name": "Score", "type":
          "Float"}, {"description": "Bootstrap server of kafka broker", "name": "Bootstrap
          Servers", "type": "String"}, {"description": "Topic of kafka broker to listen
          to", "name": "Kafka Topic", "type": "String"}, {"description": "Sasl username
          for kafka", "name": "Kafka Username", "type": "String"}, {"description":
          "Sasl password for kafka", "name": "Kafka Password", "type": "String"},
          {"description": "Kerberos API address from which videos will be downloaded
          from", "name": "Vault API Address", "type": "String"}, {"description": "Kerberos
          vault access key", "name": "Vault Access Key", "type": "String"}, {"description":
          "Kerberos vault secret access key", "name": "Vault Secret Access Key", "type":
          "String"}], "name": "Predict Video Metadata Op"}', pipelines.kubeflow.org/component_ref: '{"digest":
          "39f972ec18000bcc3a2eb5bc494e64aebcebf4e83837021496497f704493c78c", "url":
          "./predict_metadata_op.yaml"}', pipelines.kubeflow.org/arguments.parameters: '{"Batch
          Size": "{{inputs.parameters.batch_size}}", "Bootstrap Servers": "{{inputs.parameters.bootstrap_servers}}",
          "GPU": "{{inputs.parameters.gpu}}", "Kafka Password": "{{inputs.parameters.kafka_password}}",
          "Kafka Topic": "{{inputs.parameters.kafka_topic}}", "Kafka Username": "{{inputs.parameters.kafka_username}}",
          "Score": "{{inputs.parameters.score}}", "Vault API Address": "{{inputs.parameters.vault_api_address}}",
          "Vault Access Key": "{{inputs.parameters.vault_access_key}}", "Vault Secret
          Access Key": "{{inputs.parameters.vault_secret_access_key}}"}'}
  arguments:
    parameters:
    - {name: tf_model_gd_id}
    - {name: gpu}
    - {name: batch_size}
    - {name: score}
    - {name: bootstrap_servers}
    - {name: kafka_topic}
    - {name: kafka_username}
    - {name: kafka_password}
    - {name: vault_api_address}
    - {name: vault_access_key}
    - {name: vault_secret_access_key}
  serviceAccountName: pipeline-runner
