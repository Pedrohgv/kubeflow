apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: test-1-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.6.6, pipelines.kubeflow.org/pipeline_compilation_time: '2021-07-26T10:20:08.087663',
    pipelines.kubeflow.org/pipeline_spec: '{"inputs": [{"name": "google_drive_id"},
      {"name": "classes"}], "name": "test_1"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.6.6}
spec:
  entrypoint: test-1
  templates:
  - name: check-previous-output
    container:
      args: []
      command: [ls, /tmp/inputs/Previous_Output_Folder/data]
      image: alpine
    inputs:
      artifacts:
      - {name: convert-annotations-from-pascal-to-yolo-Yolo-Folder, path: /tmp/inputs/Previous_Output_Folder/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.6.6
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Checks
          what''s inside output folder from previous OP.", "implementation": {"container":
          {"command": ["ls", {"inputPath": "Previous Output Folder"}], "image": "alpine"}},
          "inputs": [{"description": "Output folder of previous OP", "name": "Previous
          Output Folder", "type": "Directory"}], "name": "Check Previous Output"}',
        pipelines.kubeflow.org/component_ref: '{"digest": "87d526b600b14de4007ce57c94a17968fbba0dccfff4f5f6e6e09609bcc3bc5e",
          "url": "./check-pipeline-output-op/component.yaml"}'}
  - name: convert-annotations-from-pascal-to-yolo
    container:
      args: []
      command: [python3, ./src/convert_pascal_2_yolo.py, --pascal_folder, /tmp/inputs/Pascal_Folder/data,
        --yolo_folder, /tmp/outputs/Yolo_Folder/data, --classes, '{{inputs.parameters.classes}}']
      image: pedrohgv/convert-pascal-2-yolo-op:latest
    inputs:
      parameters:
      - {name: classes}
      artifacts:
      - {name: merge-files-op-Merged-Folder, path: /tmp/inputs/Pascal_Folder/data}
    outputs:
      artifacts:
      - {name: convert-annotations-from-pascal-to-yolo-Yolo-Folder, path: /tmp/outputs/Yolo_Folder/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.6.6
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Given
          a folder containing images and Pascal annotations for those images, copies
          images and converts annotations to Yolo format to specified new folder.",
          "implementation": {"container": {"command": ["python3", "./src/convert_pascal_2_yolo.py",
          "--pascal_folder", {"inputPath": "Pascal Folder"}, "--yolo_folder", {"outputPath":
          "Yolo Folder"}, "--classes", {"inputValue": "Classes"}], "image": "pedrohgv/convert-pascal-2-yolo-op:latest"}},
          "inputs": [{"description": "Input path that contains both images and annotations
          in the Pascal format.", "name": "Pascal Folder", "type": "Directory"}, {"description":
          "Classes to convert to Yolo format. Only specified classes will be kept
          in the converted Yolo format.", "name": "Classes", "type": "list"}], "name":
          "Convert Annotations from Pascal to Yolo", "outputs": [{"description": "Output
          path to save both images and Yolo converted annotations.", "name": "Yolo
          Folder", "type": "Directory"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "d13cbe2861f3fc558f691d68018d78e9000fbc97dfb7213a9e96d136e10ff67d", "url":
          "./convert-pascal-2-yolo-op/component.yaml"}', pipelines.kubeflow.org/arguments.parameters: '{"Classes":
          "{{inputs.parameters.classes}}"}'}
  - name: download-and-extract-op
    container:
      args: []
      command: [python, ./src/download_zip_file.py, --gd_file_id, '{{inputs.parameters.google_drive_id}}',
        --extracted_folder, /tmp/outputs/Extracted_Dataset/data]
      image: pedrohgv/download-and-extract-google-drive-op:latest
    inputs:
      parameters:
      - {name: google_drive_id}
    outputs:
      artifacts:
      - {name: download-and-extract-op-Extracted-Dataset, path: /tmp/outputs/Extracted_Dataset/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.6.6
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Downloads
          and extracts file from google drive.", "implementation": {"container": {"command":
          ["python", "./src/download_zip_file.py", "--gd_file_id", {"inputValue":
          "Google Drive ID"}, "--extracted_folder", {"outputPath": "Extracted Dataset"}],
          "image": "pedrohgv/download-and-extract-google-drive-op:latest"}}, "inputs":
          [{"description": "File ID of file in Google Drive", "name": "Google Drive
          ID", "type": "String"}], "name": "Download and Extract op", "outputs": [{"description":
          "Folder containing images and annotaions in Pascal format", "name": "Extracted
          Dataset", "type": "Directory"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "e38c8ba85f408bbb799291ec94fc1cd9efc85232f4c86c4a904ac542c45cd368", "url":
          "./download-and-extract-google-drive-op/component.yaml"}', pipelines.kubeflow.org/arguments.parameters: '{"Google
          Drive ID": "{{inputs.parameters.google_drive_id}}"}'}
  - name: merge-files-op
    container:
      args: []
      command: [python, ./src/merge_files.py, --nested_folder, /tmp/inputs/Nested_Folder/data,
        --merged_folder, /tmp/outputs/Merged_Folder/data]
      image: pedrohgv/merge-files-op:latest
    inputs:
      artifacts:
      - {name: download-and-extract-op-Extracted-Dataset, path: /tmp/inputs/Nested_Folder/data}
    outputs:
      artifacts:
      - {name: merge-files-op-Merged-Folder, path: /tmp/outputs/Merged_Folder/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.6.6
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Takes
          all nested files (by 1 level) from input folder and moves them to one single
          output folder.", "implementation": {"container": {"command": ["python",
          "./src/merge_files.py", "--nested_folder", {"inputPath": "Nested Folder"},
          "--merged_folder", {"outputPath": "Merged Folder"}], "image": "pedrohgv/merge-files-op:latest"}},
          "inputs": [{"description": "Folder containing images and annotations on
          separate folders", "name": "Nested Folder", "type": "Directory"}], "name":
          "Merge Files OP", "outputs": [{"description": "Folder containing images
          and annotations all in the same folder", "name": "Merged Folder", "type":
          "Directory"}]}', pipelines.kubeflow.org/component_ref: '{"digest": "b8d5c6116870267582b6c942130c8046d031f699ed7d9e0fc917313aa7c35341",
          "url": "./merge-files-op/component.yaml"}'}
  - name: test-1
    inputs:
      parameters:
      - {name: classes}
      - {name: google_drive_id}
    dag:
      tasks:
      - name: check-previous-output
        template: check-previous-output
        dependencies: [convert-annotations-from-pascal-to-yolo]
        arguments:
          artifacts:
          - {name: convert-annotations-from-pascal-to-yolo-Yolo-Folder, from: '{{tasks.convert-annotations-from-pascal-to-yolo.outputs.artifacts.convert-annotations-from-pascal-to-yolo-Yolo-Folder}}'}
      - name: convert-annotations-from-pascal-to-yolo
        template: convert-annotations-from-pascal-to-yolo
        dependencies: [merge-files-op]
        arguments:
          parameters:
          - {name: classes, value: '{{inputs.parameters.classes}}'}
          artifacts:
          - {name: merge-files-op-Merged-Folder, from: '{{tasks.merge-files-op.outputs.artifacts.merge-files-op-Merged-Folder}}'}
      - name: download-and-extract-op
        template: download-and-extract-op
        arguments:
          parameters:
          - {name: google_drive_id, value: '{{inputs.parameters.google_drive_id}}'}
      - name: merge-files-op
        template: merge-files-op
        dependencies: [download-and-extract-op]
        arguments:
          artifacts:
          - {name: download-and-extract-op-Extracted-Dataset, from: '{{tasks.download-and-extract-op.outputs.artifacts.download-and-extract-op-Extracted-Dataset}}'}
  arguments:
    parameters:
    - {name: google_drive_id}
    - {name: classes}
  serviceAccountName: pipeline-runner
